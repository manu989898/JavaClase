<?xml version="1.0" encoding="UTF-8"?>

<!-- 
Es de tipo simple cuando el elemento solo tiene texto dentro
Es de tipo complejo cuando el elemento no es simple
    elemento que tiene otros elementos dentro
    elemento que tiene atributos

Tipos de datos XSD
xs:string Cadena de texto
xs:decimal Número decimal
xs:integer Número entero
xs:positiveInteger Entero mayor que cero
xs:nonNegativeInteger Entero mayor o igual que cero
xs:date Fecha (con formato aaaa-mm-dd)
xs:time Hora (con formato hh:mm)
xs:minOccurs="0" El elemento es opcional
xs:maxOccurs="unbounded" El elemento puede aparecer varias veces
xs:minInclusive="0" / maxInclusive="120" incluye los numeros 0 y 120
xs:minExclusive="0" / maxExclusive="120" excluye los numeros 0 y 120
xs:minLength="3" / maxLength="100" longitud minima y maxima de la cadena
xs:enumeration value="Gratuito" / value="Integro" / value="Copago" opciones
xs:totalDigits="8" / fractionDigits="2" numero de digitos totales y decimales
xs:sequence Elementos que aparecen en el orden indicado
xs:choice Elección entre varios elementos (solo puede aparecer uno)
xs:all Todos los elementos que aparecen en cualquier orden
xs:positiveInteger Entero mayor que cero

Patrones XSD
.                       Cualquier carácter
\d                      Cualquier dígito
\D                      Cualquier carácter no dígito
x*                      Lo de delante de * tiene que aparecer 0 o más veces
x+                      Lo de delante de + tiene que aparecer 1 o más veces
x?                      Lo de delante de ? puede aparecer o no
[abc]                   Tiene que haber algún carácter de los de dentro
[0-9]                   Tiene que haber un valor entre los dos especificados, ambos inclusive
x{5}                    Tiene que aparecer 5 veces lo de delante
x{5,}                   Tiene que aparecer 5 o más veces lo de delante
x{5,8}                  Tiene que aparecer entre 5 y 8 veces lo de delante
(valor1|valor2|valor3)  Uno de los valores

-->

<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema">
    <!--Declaramos el elemento receta-->
    <xs:element name="receta"> 
        <!--Declaramos que es de tipo compleja al tener otra etiqueta dentro-->
        <xs:complexType>
            <!--Declaramos que es de tipo secuencia al tener varias etiquetas dentro-->
            <xs:sequence>
               
                <xs:element name="medicamento" type="xs:string" minOccurs="0" maxOccurs="unbounded">
                <!--Declaramos tipo String porque tiene texto dentro-->
                <!--Declaramos min(o) por si no hay ninguno y max(sin límite)-->
                <!--Declaramos tipo String porque va texto dentro de receta-->
                </xs:element>             
                <xs:element name="farmacia" type="xs:string" default="Juaneda">
                 <!--Usamos default="Juaneda" para dar valor por defecto y no rellenar la etiqueta-->
                <!--Usamos fixed="Juaneda" para que obligatoriamente sea juaneda o nada-->
                </xs:element>
                <xs:element name="edad" >
                    <xs:simpleType>
                        <!--Declaramos restriction-->
                        <!--Restringimos con tipo int-->
                        <xs:restriction base="xs:integer">
                            <!--Declaramos minimo y maximo-->
                            <xs:minInclusive value="0"/>
                            <xs:maxInclusive value="120"/>
                        </xs:restriction>
                    </xs:simpleType>
                </xs:element>
                <xs:element name="nombre" >
                    <xs:simpleType>
                        <!--Declaramos restriction-->
                        <!--Restringimos con tipo String-->
                        <xs:restriction base="xs:string">
                            <!--Declaramos minimo y maximo-->
                            <xs:minLength value="1"/>
                            <xs:maxLength value="100"/>
                        </xs:restriction>
                    </xs:simpleType>
                </xs:element>
                <xs:element name="pago">
                    <xs:simpleType>
                        <xs:restriction base="xs:string">
                            <!--Usamos enumeration para dar opciones-->
                            <xs:enumeration value="Gratuito"/>
                            <xs:enumeration value="Integro"/>
                            <xs:enumeration value="Copago"/>
                        </xs:restriction>
                    </xs:simpleType>
                </xs:element>
                <xs:element name="dni">
                    <xs:simpleType>
                        <xs:restriction base="xs:string">
                            <!--Usamos pattern para dar opciones-->
                            <!--\d{8} delante 8num y [A-Z] letra de la A a la Z-->
                            <xs:pattern value="\d{8}[A-Z]"/>
                        </xs:restriction>
                    </xs:simpleType>
                </xs:element>
                <xs:element name="medico">
                    <xs:complexType>
                        <!--Un elemento con contenido String y un atributo se describe como
                        una extensión de String-->
                        <xs:simpleContent>
                            <!--Es un element string con un atributo integrer dentro-->
                            <xs:extension base="xs:string">
                                <!--Declaramos el atributo de tipo int-->
                                <!--Declaramos use="required" para hacerlo obligatorio-->
                                <xs:attribute name="numColegiado" type="xs:integer" use="required"/>
                            </xs:extension>
                        </xs:simpleContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="posologia">
                    <xs:complexType>
                        <xs:sequence>
                            <xs:element name="tomas" type="xs:positiveInteger"/>
                            <xs:element name="horario" type="xs:string"/>
                        </xs:sequence>
                        <!--Declaramos atributo de tipo String, despues de sequencia-->
                        <!--Usamos use="required" para que sea obligatioro el atributo-->
                        <xs:attribute name="duracion" type="xs:string" use="required"/>
                    </xs:complexType>
                </xs:element>
                <xs:element name="alergias">
                    <!--Declaramos tipo compleja porque alergias está vacia-->
                    <xs:complexType/>
                </xs:element>
                <xs:element name="grupo_sanguineo">
                    <!--Es complexType porque tiene atributo la etiqueta-->
                    <xs:complexType>
                        <!--Declaramos nombre tipo y obligatoriedad-->
                        <xs:attribute name="tipo" type="xs:string" use="required"/>
                    </xs:complexType>
                </xs:element>
                <xs:element name="instrucciones">
                    <!--Declaramos mixed=true porque tiene contenido mixto en su interior-->
                    <xs:complexType mixed="true">
                        <!--Declaramos maxOccurs="unbounded" porque hay varios <b> dentro-->
                        <xs:choice maxOccurs="unbounded" minOccurs="0">
                            <xs:element name="b"></xs:element>
                        </xs:choice>
                    </xs:complexType>
                </xs:element>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
</xs:schema>
